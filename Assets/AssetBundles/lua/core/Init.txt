import("UnityEngine")

-- log alias
Log = setmetatable({}, {__call = function(msg2,msg)
	UnityEngine.Debug.Log(msg)
end})

Log.Warn = function (msg)
	UnityEngine.Debug.LogWarning(msg)
end

Log.Error = function(msg)
	UnityEngine.Debug.LogError(msg)
end

-- 覆盖 type函数，以支持导出类型
-- local old_type = type
-- type = function ( obj )
-- 	local t = old_type(obj)
-- 	if t == 'userdata' then
-- 		t = obj:GetType():ToString()
-- 	end

-- 	return t
-- end

-- OO
require "core/Class"

-- Event Dispatcher
local EvtD = require("core/EventDispatcher")
dispatcher = EvtD()

-- NetMgr
local NetworkManager = require("core/NetworkManager")
NetMgr = NetworkManager.Instance()
NetMgr:Init()

-- Rpc
local Rpc = require "core/Rpc"
RPC = Rpc()
RPC:Init()

-- register entity types

-- bind static root protocol methods
