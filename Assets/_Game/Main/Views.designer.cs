// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using uFrame.Kernel;
using uFrame.MVVM;
using uFrame.MVVM.Services;
using uFrame.MVVM.Bindings;
using uFrame.Serialization;
using UniRx;
using UnityEngine;


public class InitViewBase : uFrame.MVVM.ViewBase {
    
    [UnityEngine.SerializeField()]
    [UFGroup("View Model Properties")]
    [UnityEngine.HideInInspector()]
    public Single _LoadProgress;
    
    [UnityEngine.SerializeField()]
    [UFGroup("View Model Properties")]
    [UnityEngine.HideInInspector()]
    public String _LoadMessage;
    
    [UFToggleGroup("LoadMessage")]
    [UnityEngine.HideInInspector()]
    public bool _BindLoadMessage = true;
    
    [UFGroup("LoadMessage")]
    [UnityEngine.SerializeField()]
    [UnityEngine.HideInInspector()]
    [UnityEngine.Serialization.FormerlySerializedAsAttribute("_LoadMessageinput")]
    protected UnityEngine.UI.Text _LoadMessageInput;
    
    [UFToggleGroup("LoadProgress")]
    [UnityEngine.HideInInspector()]
    public bool _BindLoadProgress = true;
    
    [UFGroup("LoadProgress")]
    [UnityEngine.SerializeField()]
    [UnityEngine.HideInInspector()]
    [UnityEngine.Serialization.FormerlySerializedAsAttribute("_LoadProgressonlyWhenChanged")]
    protected bool _LoadProgressOnlyWhenChanged;
    
    public override string DefaultIdentifier {
        get {
            return base.DefaultIdentifier;
        }
    }
    
    public override System.Type ViewModelType {
        get {
            return typeof(InitViewModel);
        }
    }
    
    public InitViewModel Init {
        get {
            return (InitViewModel)ViewModelObject;
        }
    }
    
    protected override void InitializeViewModel(uFrame.MVVM.ViewModel model) {
        base.InitializeViewModel(model);
        // NOTE: this method is only invoked if the 'Initialize ViewModel' is checked in the inspector.
        // var vm = model as InitViewModel;
        // This method is invoked when applying the data from the inspector to the viewmodel.  Add any view-specific customizations here.
        var initview = ((InitViewModel)model);
        initview.LoadProgress = this._LoadProgress;
        initview.LoadMessage = this._LoadMessage;
    }
    
    public override void Bind() {
        base.Bind();
        // Use this.Init to access the viewmodel.
        // Use this method to subscribe to the view-model.
        // Any designer bindings are created in the base implementation.
        if (_BindLoadMessage) {
            this.BindTextToProperty(_LoadMessageInput, this.Init.LoadMessageProperty);
        }
        if (_BindLoadProgress) {
            this.BindProperty(this.Init.LoadProgressProperty, this.LoadProgressChanged, _LoadProgressOnlyWhenChanged);
        }
    }
    
    public virtual void LoadProgressChanged(Single arg1) {
    }
}
