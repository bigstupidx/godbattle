// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using uFrame.IOC;
using uFrame.Kernel;
using uFrame.MVVM;
using uFrame.Serialization;
using UniRx;


public class InitControllerBase : uFrame.MVVM.Controller {
    
    private uFrame.MVVM.IViewModelManager _InitViewModelManager;
    
    [uFrame.IOC.InjectAttribute("Init")]
    public uFrame.MVVM.IViewModelManager InitViewModelManager {
        get {
            return _InitViewModelManager;
        }
        set {
            _InitViewModelManager = value;
        }
    }
    
    public IEnumerable<InitViewModel> InitViewModels {
        get {
            return InitViewModelManager.OfType<InitViewModel>();
        }
    }
    
    public override void Setup() {
        base.Setup();
        // This is called when the controller is created
    }
    
    public override void Initialize(uFrame.MVVM.ViewModel viewModel) {
        base.Initialize(viewModel);
        // This is called when a viewmodel is created
        this.InitializeInit(((InitViewModel)(viewModel)));
    }
    
    public virtual InitViewModel CreateInit() {
        return ((InitViewModel)(this.Create(Guid.NewGuid().ToString())));
    }
    
    public override uFrame.MVVM.ViewModel CreateEmpty() {
        return new InitViewModel(this.EventAggregator);
    }
    
    public virtual void InitializeInit(InitViewModel viewModel) {
        // This is called when a InitViewModel is created
        InitViewModelManager.Add(viewModel);
    }
    
    public override void DisposingViewModel(uFrame.MVVM.ViewModel viewModel) {
        base.DisposingViewModel(viewModel);
        InitViewModelManager.Remove(viewModel);
    }
}
